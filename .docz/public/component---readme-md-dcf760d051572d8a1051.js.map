{"version":3,"sources":["webpack:///../README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","parentName","isMDXComponent"],"mappings":"mcAMO,IAAMA,EAAe,Q,0JAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,8GACA,qBAAG,mBAAKC,IAAI,QAAQC,IAAI,gEACxB,qBAAG,mBAAGC,WAAW,KAAQ,CACrB,KAAQ,iDADT,cAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,wCADT,gBAGH,iBAAQ,CACN,GAAM,gBADR,gBAGA,8DACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,yCAEL,qCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,4aAyBL,iBAAQ,CACN,GAAM,OADR,OAGA,yBACF,sBACE,6BAAQ,wBACR,8BACA,kCACA,iCACA,sCAEF,sBACE,mCACA,gCACA,sBAAI,mCACJ,2BACA,+DAEF,sBACE,kCACA,kCACA,sBAAI,mCACJ,qCACA,4DAEF,sBACE,+BACA,yCACA,sBAAI,mCACJ,4BACA,0EAEF,sBACE,mCACA,kCAAa,wBACb,+BACA,uBACA,yGAAoF,0CAApF,cAAsI,6BAAtI,wBAEF,sBACE,wCACA,6DACA,+BACA,8BACA,gFAEF,sBACE,oCACA,6DACA,+BACA,8BACA,uEAEF,sBACE,oCACA,6DACA,+BACA,8BACA,4EAEF,sBACE,oCACA,iCACA,+BACA,+BACA,mDAEF,sBACE,uCACA,6DACA,+BACA,8BACA,qFAEF,sBACE,oCACA,iCACA,+BACA,+BACA,qEAEF,sBACE,oCACA,6DACA,+BACA,8BACA,oFAEF,sBACE,yCACA,iCACA,+BACA,+BACA,kEAEF,sBACE,oCACA,iCACA,+BACA,+BACA,2DAGA,iBAAQ,CACN,GAAM,yCADR,2CAGA,qBAAG,0BAAYA,WAAW,KAAvB,mBAAH,0KAAyO,0BAAYA,WAAW,KAAvB,UAAzO,iBAA6S,0BAAYA,WAAW,KAAvB,SAA7S,0EACA,iBAAQ,CACN,GAAM,eADR,eAGA,uDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kBAEL,mEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mBAEL,mEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wBAEL,iBAAQ,CACN,GAAM,aADR,aAGA,iBAAQ,CACN,UAAa,sBAEb,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,qBAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,6CAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,+DAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,0BAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,oBAQF,iBAAQ,CACN,GAAM,gBADR,gBAGA,oEACA,iBAAQ,CACN,GAAM,WADR,WAGA,6B,iJAKJN,EAAWO,gBAAiB","file":"component---readme-md-dcf760d051572d8a1051.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"H:/react-otp-input/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-otp-input\"\n    }}>{`react-otp-input`}</h1>\n    <p>{`A fully customizable, one-time password input component for the web built with React.`}</p>\n    <p><img alt=\"GIPHY\" src=\"https://media.giphy.com/media/9JiszPVOX5FuPfJm39/giphy.gif\" /></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://devfolioco.github.io/react-otp-input\"\n      }}>{`Live Demo`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/0y849kwoqv\"\n      }}>{`CodeSandbox`}</a></p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`To install the latest stable version:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install --save react-otp-input\n`}</code></pre>\n    <p>{`Basic usage:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport OtpInput from 'react-otp-input';\n\nexport default class App extends Component {\n  state = {\n    otp: '',\n  };\n\n  handleChange = otp => this.setState({ otp });\n\n  render() {\n    return (\n      <div>\n        <OtpInput\n          onChange={this.handleChange}\n          numInputs={6}\n          separator={<span>-</span>}\n        />\n      </div>\n    );\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n  <tr>\n    <th>Name<br /></th>\n    <th>Type</th>\n    <th>Required</th>\n    <th>Default</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>numInputs</td>\n    <td>number</td>\n    <td><strong>true</strong></td>\n    <td>4</td>\n    <td>Number of OTP inputs to be rendered.</td>\n  </tr>\n  <tr>\n    <td>onChange</td>\n    <td>function</td>\n    <td><strong>true</strong></td>\n    <td>console.log</td>\n    <td>Returns OTP code typed in inputs.</td>\n  </tr>\n  <tr>\n    <td>value</td>\n    <td>string / number</td>\n    <td><strong>true</strong></td>\n    <td>''</td>\n    <td>The value of the otp passed into the component.</td>\n  </tr>\n  <tr>\n    <td>separator</td>\n    <td>component<br /></td>\n    <td>false</td>\n    <td></td>\n    <td>Provide a custom separator between inputs by passing a component. For instance, <code>&lt;span&gt;-&lt;/span&gt;</code> would add <code>-</code> between each input</td>\n  </tr>\n  <tr>\n    <td>containerStyle</td>\n    <td>style (object) / className (string)</td>\n    <td>false</td>\n    <td>none</td>\n    <td>Style applied or class passed to container of inputs.</td>\n  </tr>\n  <tr>\n    <td>inputStyle</td>\n    <td>style (object) / className (string)</td>\n    <td>false</td>\n    <td>none</td>\n    <td>Style applied or class passed to each input.</td>\n  </tr>\n  <tr>\n    <td>focusStyle</td>\n    <td>style (object) / className (string)</td>\n    <td>false</td>\n    <td>none</td>\n    <td>Style applied or class passed to inputs on focus.</td>\n  </tr>\n  <tr>\n    <td>isDisabled</td>\n    <td>boolean</td>\n    <td>false</td>\n    <td>false</td>\n    <td>Disables all the inputs.</td>\n  </tr>\n  <tr>\n    <td>disabledStyle</td>\n    <td>style (object) / className (string)</td>\n    <td>false</td>\n    <td>none</td>\n    <td>Style applied or class passed to each input when disabled.</td>\n  </tr>\n  <tr>\n    <td>hasErrored</td>\n    <td>boolean</td>\n    <td>false</td>\n    <td>false</td>\n    <td>Indicates there is an error in the inputs.</td>\n  </tr>\n  <tr>\n    <td>errorStyle</td>\n    <td>style (object) / className (string)</td>\n    <td>false</td>\n    <td>none</td>\n    <td>Style applied or class passed to each input when errored.</td>\n  </tr>\n  <tr>\n    <td>shouldAutoFocus</td>\n    <td>boolean</td>\n    <td>false</td>\n    <td>false</td>\n    <td>Auto focuses input on inital page load.</td>\n  </tr>\n  <tr>\n    <td>isInputNum</td>\n    <td>boolean</td>\n    <td>false</td>\n    <td>false</td>\n    <td>Restrict input to only numbers.</td>\n  </tr>\n    </table>\n    <h2 {...{\n      \"id\": \"breaking-changes-when-porting-to-v100\"\n    }}>{`Breaking changes when porting to v1.0.0`}</h2>\n    <p><inlineCode parentName=\"p\">{`react-otp-input`}</inlineCode>{` is now a controlled component to facilitate functionalities that weren't possible before from the application using it, such as clearing or pre-assigning values. For `}<inlineCode parentName=\"p\">{`v1.0.0`}</inlineCode>{` and above, a `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` prop needs to be passed in the component for it function as expected.`}</p>\n    <h2 {...{\n      \"id\": \"development\"\n    }}>{`Development`}</h2>\n    <p>{`To run the development server:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run dev\n`}</code></pre>\n    <p>{`To run the development server for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run docs\n`}</code></pre>\n    <p>{`To make a production build of the example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run docs:prod\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"checklist\"\n    }}>{`Checklist`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Add flowtypes`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Add ESLint, Prettier for code quality`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Add styling support for states including focus/disabled`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Travis CI, Codecov`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Write tests`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"contributing\"\n    }}>{`Contributing`}</h2>\n    <p>{`Feel free to open issues and pull requests!`}</p>\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`MIT`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}